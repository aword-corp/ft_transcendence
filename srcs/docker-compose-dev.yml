services:
  nginx:
    image: acorp/nginx
    build: 
      context: nginx/
      dockerfile: Dockerfile
    ports:
      - "8443:8443"
    volumes:
      - static:/var/www
    networks:
      - tiktok
    restart: always
    env_file:
      - .env

  postgresql:
    image: acorp/postgresql
    build: 
      context: postgresql/
      dockerfile: Dockerfile
    networks:
      - tiktok
    volumes:
      - db:/var/lib/postgresql/data
    restart: always
    env_file:
      - .env
    healthcheck:
      test: pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
      interval: 10s
      timeout: 5s
      retries: 20

  redis:
    image: acorp/redis
    build: 
      context: redis/
      dockerfile: Dockerfile
    networks:
      - tiktok
    restart: always
    env_file:
      - .env
    healthcheck:
      test: redis-cli ping | grep "PONG"
      interval: 10s
      timeout: 5s
      retries: 20

  backend:
    image: acorp/backend
    build: 
      context: backend/
      dockerfile: Dockerfile
    volumes:
      - static:/var/www
    networks:
      - tiktok
    restart: always
    env_file:
      - .env
    healthcheck:
      test: curl -s --raw localhost:8000/ | grep "ok"
      interval: 10s
      timeout: 5s
      retries: 20
    environment:
      dev: true
    depends_on:
      postgresql:
        condition: service_healthy

  backend-game:
    image: acorp/backend-game
    build: 
      context: backend-game/
      dockerfile: Dockerfile
    networks:
      - tiktok
    restart: always
    env_file:
      - .env
    environment:
      dev: true
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
  
  coturn:
    image: acorp/coturn
    build: 
      context: coturn/
      dockerfile: Dockerfile
    networks:
      - tiktok
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "5349:5349"
      - "5349:5349/udp"
      - "49152:49152/udp"
    restart: always
    env_file:
      - .env
    environment:
      dev: true
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy

networks:
  tiktok:
    driver: bridge

volumes:
  db:
  static:
